program->decl_list
decl_list->decl decl_list`
decl_list`->decl decl_list`|e
decl->var_decl|fun_decl
var_decl->type_spec IDENT var_decl`
var_decl`->;|[];
type_spec->VOID |BOOL|INT|FLOAT
fun_decl->type_spec IDENT(params)compound_stmt
params->param_list |VOID
param_list->param
param_list->param param_list`
param_list`->,param param_list|e
param->type_spec param`
param`->[]|e
stmt_lsit->stmt_lsit`
stmt_lsit`->stmt stmt_lsit`|e

stmt->expr_stmt|compound_stmt|if_stmt|while_stmt|return_stmt|break_stmt

expr_stmt->expr ;|;
while_stmt->while(expr)stmt
compound_stmt->{local_decls stmt_lsit}
local_decls->local_decls`
local_decls`->local_decl local_decls`|e
local_decl->type_spec IDENT local_decl`
local_decl`->;|[];
if_stmt->if(expr) stmt if_stmt`
if_stmt`->else stmt|e
return_stmt->return return_stmt`
return_stmt`->;|expr|e
break_stmt->break;

expr->(expr)expr`|!expr|-expr|+expr|IDENT expr`|BOOL_LIT|INT_LIT|FLOAT_LIT|NEW_TYPE_SPEC[expr]|e
expr`->expr`|(expr`) expr`|expr`|=expr|!=expr|OR expr|AND expr|<=expr|>=expr|>expr|<expr|+expr|-expr|/expr|%expr|*expr|[expr]|[args]|.size|e


arg_list->expr arg_list`
arg_list`->,expr arg_list`|e
args->arg_list|e